[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]

[tool.poetry]
authors = ["MaaniBeigy <manibeygi@gmail.com>"]
description = "Coefficient of Variation (CV) and Coefficient of Quartile Variation (CQV) with Confidence Intervals (CI) "
homepage = "https://github.com/MaaniBeigy/pycvcqv"
license = "MIT"
name = "pycvcqv"
readme = "README.md"
repository = "https://github.com/MaaniBeigy/pycvcqv"
version = "0.1.18"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [
  "coefficient of variation",
  "coefficient of quartile variation",
  "data science",
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
numpy = "^1.26.4"
pandas = "*"
python = ">=3.9,<4.0"
scipy = "*"

[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = {version = "^24.3.0", allow-prereleases = true}
coverage = "*"
coverage-badge = "*"
darglint = "^1.8.1"
docstr-coverage = "^2.2.0"
flake8 = "^4.0.1"
interrogate = "^1.5.0"
isort = {extras = ["colors"], version = "^5.10.1"}
jupyter-book = "*"
matplotlib = "*"
mypy = "*"
mypy-extensions = "*"
pre-commit = "^4.0.1"
py = "^1.11.0"
pydocstyle = "^6.1.1"
pylint = "^2.13.9"
pytest = "*"
pytest-cov = "*"
pyupgrade = "^2.37.2"
radon = "^5.1.0"
safety = "^2.0.0"

[tool.black]
# https://github.com/psf/black
color = true
line-length = 88
target-version = ["py37"]

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
line_length = 88
py_version = 37

color_output = true
force_grid_wrap = 0
include_trailing_comma = true
indent = 4
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
multi_line_output = 3
profile = "black"
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
use_parentheses = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
color_output = true
pretty = true
show_traceback = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
exclude = ['venv', '.venv', 'env', 'env/', 'venv/', '.venv/']
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ['pycvcqv', 'tests']

[coverage.paths]

source = 'pycvcqv'

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true

[tool.bandit]
skips = ["B101", "B601"]
tests = ["B201"]

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']

[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = [
  "os.execl",
  "os.execle",
  "os.execlp",
  "os.execlpe",
  "os.execv",
  "os.execve",
  "os.execvp",
  "os.execvpe",
  "os.spawnl",
  "os.spawnle",
  "os.spawnlp",
  "os.spawnlpe",
  "os.spawnv",
  "os.spawnve",
  "os.spawnvp",
  "os.spawnvpe",
  "os.startfile",
]
shell = [
  "os.system",
  "os.popen",
  "os.popen2",
  "os.popen3",
  "os.popen4",
  "popen2.popen2",
  "popen2.popen3",
  "popen2.popen4",
  "popen2.Popen3",
  "popen2.Popen4",
  "commands.getoutput",
  "commands.getstatusoutput",
]
subprocess = [
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output",
]

[tool.flake8]
max-line-length = 88

[tool.pydocstyle]
convention = "google"

[tool.radon]
cc_min = "A"
exclude = "test_*.py"
mi_min = "A"
